# Generated by Django 5.1.3 on 2025-02-24 15:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "CategoryName",
                    models.CharField(
                        choices=[
                            ("business", "business"),
                            ("entertainment", "entertainment"),
                            ("general", "general"),
                            ("health", "health"),
                            ("science", "science"),
                            ("sports", "sports"),
                            ("technology", "technology"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="BrieflyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("ae", "United Arab Emirates"),
                            ("ar", "Argentina"),
                            ("at", "Austria"),
                            ("au", "Australia"),
                            ("be", "Belgium"),
                            ("bg", "Bulgaria"),
                            ("br", "Brazil"),
                            ("ca", "Canada"),
                            ("ch", "Switzerland"),
                            ("cn", "China"),
                            ("co", "Colombia"),
                            ("cz", "Czech Republic"),
                            ("de", "Germany"),
                            ("eg", "Egypt"),
                            ("fr", "France"),
                            ("gb", "United Kingdom"),
                            ("gr", "Greece"),
                            ("hk", "Hong Kong"),
                            ("hu", "Hungary"),
                            ("id", "Indonesia"),
                            ("ie", "Ireland"),
                            ("il", "Israel"),
                            ("in", "India"),
                            ("it", "Italy"),
                            ("jp", "Japan"),
                            ("kr", "South Korea"),
                            ("lt", "Lithuania"),
                            ("lv", "Latvia"),
                            ("ma", "Morocco"),
                            ("mx", "Mexico"),
                            ("my", "Malaysia"),
                            ("ng", "Nigeria"),
                            ("nl", "Netherlands"),
                            ("no", "Norway"),
                            ("nz", "New Zealand"),
                            ("ph", "Philippines"),
                            ("pl", "Poland"),
                            ("pt", "Portugal"),
                            ("ro", "Romania"),
                            ("rs", "Serbia"),
                            ("ru", "Russia"),
                            ("sa", "Saudi Arabia"),
                            ("se", "Sweden"),
                            ("sg", "Singapore"),
                            ("si", "Slovenia"),
                            ("sk", "Slovakia"),
                            ("th", "Thailand"),
                            ("tr", "Turkey"),
                            ("tw", "Taiwan"),
                            ("ua", "Ukraine"),
                            ("us", "United States"),
                            ("ve", "Venezuela"),
                            ("za", "South Africa"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "BrieflyUsers",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="NewsArticle",
            fields=[
                ("NewsID", models.AutoField(primary_key=True, serialize=False)),
                ("Title", models.CharField(max_length=255)),
                ("Date", models.DateField(auto_now_add=True)),
                ("Content", models.TextField()),
                ("Source", models.CharField(max_length=255)),
                (
                    "Category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="briefly_app.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "NewsArticles",
            },
        ),
        migrations.CreateModel(
            name="SavedNews",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "News",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="briefly_app.newsarticle",
                    ),
                ),
                (
                    "User",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "SavedNews",
            },
        ),
        migrations.CreateModel(
            name="UserCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="briefly_app.category",
                    ),
                ),
                (
                    "User",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "UserCategories",
            },
        ),
        migrations.CreateModel(
            name="ViewedNews",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "News",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="briefly_app.newsarticle",
                    ),
                ),
                (
                    "User",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "ViewedNews",
            },
        ),
    ]
